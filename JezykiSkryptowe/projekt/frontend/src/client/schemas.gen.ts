// This file is auto-generated by @hey-api/openapi-ts

export const $Body_upload_file_upload_post = {
    properties: {
        files: {
            items: {
                type: 'string',
                format: 'binary'
            },
            type: 'array',
            title: 'Files'
        }
    },
    type: 'object',
    required: ['files'],
    title: 'Body_upload_file_upload_post'
} as const;

export const $FilePublic = {
    properties: {
        filename: {
            type: 'string',
            title: 'Filename'
        },
        on_disk: {
            type: 'string',
            title: 'On Disk'
        },
        size: {
            type: 'integer',
            title: 'Size'
        },
        id: {
            type: 'string',
            title: 'Id'
        },
        created_at: {
            type: 'string',
            format: 'date-time',
            title: 'Created At'
        }
    },
    type: 'object',
    required: ['filename', 'on_disk', 'size', 'id', 'created_at'],
    title: 'FilePublic'
} as const;

export const $HTTPValidationError = {
    properties: {
        detail: {
            items: {
                '$ref': '#/components/schemas/ValidationError'
            },
            type: 'array',
            title: 'Detail'
        }
    },
    type: 'object',
    title: 'HTTPValidationError'
} as const;

export const $MessagePublic = {
    properties: {
        content: {
            type: 'string',
            title: 'Content'
        },
        sent_by: {
            allOf: [
                {
                    '$ref': '#/components/schemas/SentBy'
                }
            ],
            default: 'user'
        },
        id: {
            type: 'string',
            title: 'Id'
        },
        thread_id: {
            type: 'string',
            title: 'Thread Id'
        }
    },
    type: 'object',
    required: ['content', 'id', 'thread_id'],
    title: 'MessagePublic'
} as const;

export const $ResponseModel = {
    properties: {
        message: {
            type: 'string',
            title: 'Message'
        }
    },
    type: 'object',
    required: ['message'],
    title: 'ResponseModel'
} as const;

export const $SentBy = {
    type: 'string',
    enum: ['user', 'bot'],
    title: 'SentBy'
} as const;

export const $ThreadPublicWithMessages = {
    properties: {
        title: {
            type: 'string',
            title: 'Title'
        },
        created_at: {
            type: 'string',
            format: 'date-time',
            title: 'Created At'
        },
        id: {
            type: 'string',
            title: 'Id'
        },
        messages: {
            items: {
                '$ref': '#/components/schemas/MessagePublic'
            },
            type: 'array',
            title: 'Messages'
        }
    },
    type: 'object',
    required: ['title', 'id', 'messages'],
    title: 'ThreadPublicWithMessages'
} as const;

export const $ValidationError = {
    properties: {
        loc: {
            items: {
                anyOf: [
                    {
                        type: 'string'
                    },
                    {
                        type: 'integer'
                    }
                ]
            },
            type: 'array',
            title: 'Location'
        },
        msg: {
            type: 'string',
            title: 'Message'
        },
        type: {
            type: 'string',
            title: 'Error Type'
        }
    },
    type: 'object',
    required: ['loc', 'msg', 'type'],
    title: 'ValidationError'
} as const;